// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transaction.proto

package transaction

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//学生信息初始化
type StuInfoInitInput struct {
	StuID                uint64   `protobuf:"varint,1,opt,name=StuID,proto3" json:"StuID,omitempty"`
	StuName              string   `protobuf:"bytes,2,opt,name=StuName,proto3" json:"StuName,omitempty"`
	UsName               string   `protobuf:"bytes,3,opt,name=UsName,proto3" json:"UsName,omitempty"`
	Major                string   `protobuf:"bytes,4,opt,name=Major,proto3" json:"Major,omitempty"`
	ExtInfo              string   `protobuf:"bytes,5,opt,name=ExtInfo,proto3" json:"ExtInfo,omitempty"`
	Time                 uint64   `protobuf:"varint,6,opt,name=Time,proto3" json:"Time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StuInfoInitInput) Reset()         { *m = StuInfoInitInput{} }
func (m *StuInfoInitInput) String() string { return proto.CompactTextString(m) }
func (*StuInfoInitInput) ProtoMessage()    {}
func (*StuInfoInitInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{0}
}

func (m *StuInfoInitInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StuInfoInitInput.Unmarshal(m, b)
}
func (m *StuInfoInitInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StuInfoInitInput.Marshal(b, m, deterministic)
}
func (m *StuInfoInitInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StuInfoInitInput.Merge(m, src)
}
func (m *StuInfoInitInput) XXX_Size() int {
	return xxx_messageInfo_StuInfoInitInput.Size(m)
}
func (m *StuInfoInitInput) XXX_DiscardUnknown() {
	xxx_messageInfo_StuInfoInitInput.DiscardUnknown(m)
}

var xxx_messageInfo_StuInfoInitInput proto.InternalMessageInfo

func (m *StuInfoInitInput) GetStuID() uint64 {
	if m != nil {
		return m.StuID
	}
	return 0
}

func (m *StuInfoInitInput) GetStuName() string {
	if m != nil {
		return m.StuName
	}
	return ""
}

func (m *StuInfoInitInput) GetUsName() string {
	if m != nil {
		return m.UsName
	}
	return ""
}

func (m *StuInfoInitInput) GetMajor() string {
	if m != nil {
		return m.Major
	}
	return ""
}

func (m *StuInfoInitInput) GetExtInfo() string {
	if m != nil {
		return m.ExtInfo
	}
	return ""
}

func (m *StuInfoInitInput) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type StuInfoInitOutput struct {
	Success              string   `protobuf:"bytes,1,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StuInfoInitOutput) Reset()         { *m = StuInfoInitOutput{} }
func (m *StuInfoInitOutput) String() string { return proto.CompactTextString(m) }
func (*StuInfoInitOutput) ProtoMessage()    {}
func (*StuInfoInitOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{1}
}

func (m *StuInfoInitOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StuInfoInitOutput.Unmarshal(m, b)
}
func (m *StuInfoInitOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StuInfoInitOutput.Marshal(b, m, deterministic)
}
func (m *StuInfoInitOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StuInfoInitOutput.Merge(m, src)
}
func (m *StuInfoInitOutput) XXX_Size() int {
	return xxx_messageInfo_StuInfoInitOutput.Size(m)
}
func (m *StuInfoInitOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_StuInfoInitOutput.DiscardUnknown(m)
}

var xxx_messageInfo_StuInfoInitOutput proto.InternalMessageInfo

func (m *StuInfoInitOutput) GetSuccess() string {
	if m != nil {
		return m.Success
	}
	return ""
}

//学生信息更新
type StudentInfoUpdateInput struct {
	StuID                uint64   `protobuf:"varint,1,opt,name=StuID,proto3" json:"StuID,omitempty"`
	StuName              string   `protobuf:"bytes,2,opt,name=StuName,proto3" json:"StuName,omitempty"`
	UsName               string   `protobuf:"bytes,3,opt,name=UsName,proto3" json:"UsName,omitempty"`
	Major                string   `protobuf:"bytes,4,opt,name=Major,proto3" json:"Major,omitempty"`
	ExtInfo              string   `protobuf:"bytes,5,opt,name=ExtInfo,proto3" json:"ExtInfo,omitempty"`
	Time                 uint64   `protobuf:"varint,6,opt,name=Time,proto3" json:"Time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StudentInfoUpdateInput) Reset()         { *m = StudentInfoUpdateInput{} }
func (m *StudentInfoUpdateInput) String() string { return proto.CompactTextString(m) }
func (*StudentInfoUpdateInput) ProtoMessage()    {}
func (*StudentInfoUpdateInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{2}
}

func (m *StudentInfoUpdateInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StudentInfoUpdateInput.Unmarshal(m, b)
}
func (m *StudentInfoUpdateInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StudentInfoUpdateInput.Marshal(b, m, deterministic)
}
func (m *StudentInfoUpdateInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StudentInfoUpdateInput.Merge(m, src)
}
func (m *StudentInfoUpdateInput) XXX_Size() int {
	return xxx_messageInfo_StudentInfoUpdateInput.Size(m)
}
func (m *StudentInfoUpdateInput) XXX_DiscardUnknown() {
	xxx_messageInfo_StudentInfoUpdateInput.DiscardUnknown(m)
}

var xxx_messageInfo_StudentInfoUpdateInput proto.InternalMessageInfo

func (m *StudentInfoUpdateInput) GetStuID() uint64 {
	if m != nil {
		return m.StuID
	}
	return 0
}

func (m *StudentInfoUpdateInput) GetStuName() string {
	if m != nil {
		return m.StuName
	}
	return ""
}

func (m *StudentInfoUpdateInput) GetUsName() string {
	if m != nil {
		return m.UsName
	}
	return ""
}

func (m *StudentInfoUpdateInput) GetMajor() string {
	if m != nil {
		return m.Major
	}
	return ""
}

func (m *StudentInfoUpdateInput) GetExtInfo() string {
	if m != nil {
		return m.ExtInfo
	}
	return ""
}

func (m *StudentInfoUpdateInput) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type StuInfoUpdateOutput struct {
	Success              string   `protobuf:"bytes,1,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StuInfoUpdateOutput) Reset()         { *m = StuInfoUpdateOutput{} }
func (m *StuInfoUpdateOutput) String() string { return proto.CompactTextString(m) }
func (*StuInfoUpdateOutput) ProtoMessage()    {}
func (*StuInfoUpdateOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{3}
}

func (m *StuInfoUpdateOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StuInfoUpdateOutput.Unmarshal(m, b)
}
func (m *StuInfoUpdateOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StuInfoUpdateOutput.Marshal(b, m, deterministic)
}
func (m *StuInfoUpdateOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StuInfoUpdateOutput.Merge(m, src)
}
func (m *StuInfoUpdateOutput) XXX_Size() int {
	return xxx_messageInfo_StuInfoUpdateOutput.Size(m)
}
func (m *StuInfoUpdateOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_StuInfoUpdateOutput.DiscardUnknown(m)
}

var xxx_messageInfo_StuInfoUpdateOutput proto.InternalMessageInfo

func (m *StuInfoUpdateOutput) GetSuccess() string {
	if m != nil {
		return m.Success
	}
	return ""
}

//各学期成绩录入
type StuGradeRecodeInput struct {
	StuID                uint64   `protobuf:"varint,1,opt,name=StuID,proto3" json:"StuID,omitempty"`
	StuName              string   `protobuf:"bytes,2,opt,name=StuName,proto3" json:"StuName,omitempty"`
	Term                 uint32   `protobuf:"varint,3,opt,name=Term,proto3" json:"Term,omitempty"`
	AverageGrades        uint32   `protobuf:"varint,4,opt,name=AverageGrades,proto3" json:"AverageGrades,omitempty"`
	ExtInfo              string   `protobuf:"bytes,5,opt,name=ExtInfo,proto3" json:"ExtInfo,omitempty"`
	Time                 uint64   `protobuf:"varint,6,opt,name=Time,proto3" json:"Time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StuGradeRecodeInput) Reset()         { *m = StuGradeRecodeInput{} }
func (m *StuGradeRecodeInput) String() string { return proto.CompactTextString(m) }
func (*StuGradeRecodeInput) ProtoMessage()    {}
func (*StuGradeRecodeInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{4}
}

func (m *StuGradeRecodeInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StuGradeRecodeInput.Unmarshal(m, b)
}
func (m *StuGradeRecodeInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StuGradeRecodeInput.Marshal(b, m, deterministic)
}
func (m *StuGradeRecodeInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StuGradeRecodeInput.Merge(m, src)
}
func (m *StuGradeRecodeInput) XXX_Size() int {
	return xxx_messageInfo_StuGradeRecodeInput.Size(m)
}
func (m *StuGradeRecodeInput) XXX_DiscardUnknown() {
	xxx_messageInfo_StuGradeRecodeInput.DiscardUnknown(m)
}

var xxx_messageInfo_StuGradeRecodeInput proto.InternalMessageInfo

func (m *StuGradeRecodeInput) GetStuID() uint64 {
	if m != nil {
		return m.StuID
	}
	return 0
}

func (m *StuGradeRecodeInput) GetStuName() string {
	if m != nil {
		return m.StuName
	}
	return ""
}

func (m *StuGradeRecodeInput) GetTerm() uint32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *StuGradeRecodeInput) GetAverageGrades() uint32 {
	if m != nil {
		return m.AverageGrades
	}
	return 0
}

func (m *StuGradeRecodeInput) GetExtInfo() string {
	if m != nil {
		return m.ExtInfo
	}
	return ""
}

func (m *StuGradeRecodeInput) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type StuGradeRecodeOutput struct {
	Success              string   `protobuf:"bytes,1,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StuGradeRecodeOutput) Reset()         { *m = StuGradeRecodeOutput{} }
func (m *StuGradeRecodeOutput) String() string { return proto.CompactTextString(m) }
func (*StuGradeRecodeOutput) ProtoMessage()    {}
func (*StuGradeRecodeOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{5}
}

func (m *StuGradeRecodeOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StuGradeRecodeOutput.Unmarshal(m, b)
}
func (m *StuGradeRecodeOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StuGradeRecodeOutput.Marshal(b, m, deterministic)
}
func (m *StuGradeRecodeOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StuGradeRecodeOutput.Merge(m, src)
}
func (m *StuGradeRecodeOutput) XXX_Size() int {
	return xxx_messageInfo_StuGradeRecodeOutput.Size(m)
}
func (m *StuGradeRecodeOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_StuGradeRecodeOutput.DiscardUnknown(m)
}

var xxx_messageInfo_StuGradeRecodeOutput proto.InternalMessageInfo

func (m *StuGradeRecodeOutput) GetSuccess() string {
	if m != nil {
		return m.Success
	}
	return ""
}

//各学期成绩更新
type StuGradeUpdateInput struct {
	StuID                uint64   `protobuf:"varint,1,opt,name=StuID,proto3" json:"StuID,omitempty"`
	StuName              string   `protobuf:"bytes,2,opt,name=StuName,proto3" json:"StuName,omitempty"`
	Term                 uint32   `protobuf:"varint,3,opt,name=Term,proto3" json:"Term,omitempty"`
	AverageGrades        uint32   `protobuf:"varint,4,opt,name=AverageGrades,proto3" json:"AverageGrades,omitempty"`
	ExtInfo              string   `protobuf:"bytes,5,opt,name=ExtInfo,proto3" json:"ExtInfo,omitempty"`
	Time                 uint64   `protobuf:"varint,6,opt,name=Time,proto3" json:"Time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StuGradeUpdateInput) Reset()         { *m = StuGradeUpdateInput{} }
func (m *StuGradeUpdateInput) String() string { return proto.CompactTextString(m) }
func (*StuGradeUpdateInput) ProtoMessage()    {}
func (*StuGradeUpdateInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{6}
}

func (m *StuGradeUpdateInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StuGradeUpdateInput.Unmarshal(m, b)
}
func (m *StuGradeUpdateInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StuGradeUpdateInput.Marshal(b, m, deterministic)
}
func (m *StuGradeUpdateInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StuGradeUpdateInput.Merge(m, src)
}
func (m *StuGradeUpdateInput) XXX_Size() int {
	return xxx_messageInfo_StuGradeUpdateInput.Size(m)
}
func (m *StuGradeUpdateInput) XXX_DiscardUnknown() {
	xxx_messageInfo_StuGradeUpdateInput.DiscardUnknown(m)
}

var xxx_messageInfo_StuGradeUpdateInput proto.InternalMessageInfo

func (m *StuGradeUpdateInput) GetStuID() uint64 {
	if m != nil {
		return m.StuID
	}
	return 0
}

func (m *StuGradeUpdateInput) GetStuName() string {
	if m != nil {
		return m.StuName
	}
	return ""
}

func (m *StuGradeUpdateInput) GetTerm() uint32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *StuGradeUpdateInput) GetAverageGrades() uint32 {
	if m != nil {
		return m.AverageGrades
	}
	return 0
}

func (m *StuGradeUpdateInput) GetExtInfo() string {
	if m != nil {
		return m.ExtInfo
	}
	return ""
}

func (m *StuGradeUpdateInput) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type StuGradeUpdateOutput struct {
	Success              string   `protobuf:"bytes,1,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StuGradeUpdateOutput) Reset()         { *m = StuGradeUpdateOutput{} }
func (m *StuGradeUpdateOutput) String() string { return proto.CompactTextString(m) }
func (*StuGradeUpdateOutput) ProtoMessage()    {}
func (*StuGradeUpdateOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{7}
}

func (m *StuGradeUpdateOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StuGradeUpdateOutput.Unmarshal(m, b)
}
func (m *StuGradeUpdateOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StuGradeUpdateOutput.Marshal(b, m, deterministic)
}
func (m *StuGradeUpdateOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StuGradeUpdateOutput.Merge(m, src)
}
func (m *StuGradeUpdateOutput) XXX_Size() int {
	return xxx_messageInfo_StuGradeUpdateOutput.Size(m)
}
func (m *StuGradeUpdateOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_StuGradeUpdateOutput.DiscardUnknown(m)
}

var xxx_messageInfo_StuGradeUpdateOutput proto.InternalMessageInfo

func (m *StuGradeUpdateOutput) GetSuccess() string {
	if m != nil {
		return m.Success
	}
	return ""
}

//活动发布
type ActivityRegisterInput struct {
	ActID                uint32   `protobuf:"varint,1,opt,name=ActID,proto3" json:"ActID,omitempty"`
	ActName              string   `protobuf:"bytes,2,opt,name=ActName,proto3" json:"ActName,omitempty"`
	Sponsor              string   `protobuf:"bytes,3,opt,name=Sponsor,proto3" json:"Sponsor,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=Status,proto3" json:"Status,omitempty"`
	ExtInfo              string   `protobuf:"bytes,5,opt,name=ExtInfo,proto3" json:"ExtInfo,omitempty"`
	Time                 uint64   `protobuf:"varint,6,opt,name=Time,proto3" json:"Time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivityRegisterInput) Reset()         { *m = ActivityRegisterInput{} }
func (m *ActivityRegisterInput) String() string { return proto.CompactTextString(m) }
func (*ActivityRegisterInput) ProtoMessage()    {}
func (*ActivityRegisterInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{8}
}

func (m *ActivityRegisterInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityRegisterInput.Unmarshal(m, b)
}
func (m *ActivityRegisterInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityRegisterInput.Marshal(b, m, deterministic)
}
func (m *ActivityRegisterInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityRegisterInput.Merge(m, src)
}
func (m *ActivityRegisterInput) XXX_Size() int {
	return xxx_messageInfo_ActivityRegisterInput.Size(m)
}
func (m *ActivityRegisterInput) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityRegisterInput.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityRegisterInput proto.InternalMessageInfo

func (m *ActivityRegisterInput) GetActID() uint32 {
	if m != nil {
		return m.ActID
	}
	return 0
}

func (m *ActivityRegisterInput) GetActName() string {
	if m != nil {
		return m.ActName
	}
	return ""
}

func (m *ActivityRegisterInput) GetSponsor() string {
	if m != nil {
		return m.Sponsor
	}
	return ""
}

func (m *ActivityRegisterInput) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ActivityRegisterInput) GetExtInfo() string {
	if m != nil {
		return m.ExtInfo
	}
	return ""
}

func (m *ActivityRegisterInput) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type ActivityRegisterOutput struct {
	Success              string   `protobuf:"bytes,1,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivityRegisterOutput) Reset()         { *m = ActivityRegisterOutput{} }
func (m *ActivityRegisterOutput) String() string { return proto.CompactTextString(m) }
func (*ActivityRegisterOutput) ProtoMessage()    {}
func (*ActivityRegisterOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{9}
}

func (m *ActivityRegisterOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityRegisterOutput.Unmarshal(m, b)
}
func (m *ActivityRegisterOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityRegisterOutput.Marshal(b, m, deterministic)
}
func (m *ActivityRegisterOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityRegisterOutput.Merge(m, src)
}
func (m *ActivityRegisterOutput) XXX_Size() int {
	return xxx_messageInfo_ActivityRegisterOutput.Size(m)
}
func (m *ActivityRegisterOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityRegisterOutput.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityRegisterOutput proto.InternalMessageInfo

func (m *ActivityRegisterOutput) GetSuccess() string {
	if m != nil {
		return m.Success
	}
	return ""
}

//活动信息更新
type ActivityInfoUpdateInput struct {
	ActID                uint32   `protobuf:"varint,1,opt,name=ActID,proto3" json:"ActID,omitempty"`
	ActName              string   `protobuf:"bytes,2,opt,name=ActName,proto3" json:"ActName,omitempty"`
	Sponsor              string   `protobuf:"bytes,3,opt,name=Sponsor,proto3" json:"Sponsor,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=Status,proto3" json:"Status,omitempty"`
	ExtInfo              string   `protobuf:"bytes,5,opt,name=ExtInfo,proto3" json:"ExtInfo,omitempty"`
	Time                 uint64   `protobuf:"varint,6,opt,name=Time,proto3" json:"Time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivityInfoUpdateInput) Reset()         { *m = ActivityInfoUpdateInput{} }
func (m *ActivityInfoUpdateInput) String() string { return proto.CompactTextString(m) }
func (*ActivityInfoUpdateInput) ProtoMessage()    {}
func (*ActivityInfoUpdateInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{10}
}

func (m *ActivityInfoUpdateInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityInfoUpdateInput.Unmarshal(m, b)
}
func (m *ActivityInfoUpdateInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityInfoUpdateInput.Marshal(b, m, deterministic)
}
func (m *ActivityInfoUpdateInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityInfoUpdateInput.Merge(m, src)
}
func (m *ActivityInfoUpdateInput) XXX_Size() int {
	return xxx_messageInfo_ActivityInfoUpdateInput.Size(m)
}
func (m *ActivityInfoUpdateInput) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityInfoUpdateInput.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityInfoUpdateInput proto.InternalMessageInfo

func (m *ActivityInfoUpdateInput) GetActID() uint32 {
	if m != nil {
		return m.ActID
	}
	return 0
}

func (m *ActivityInfoUpdateInput) GetActName() string {
	if m != nil {
		return m.ActName
	}
	return ""
}

func (m *ActivityInfoUpdateInput) GetSponsor() string {
	if m != nil {
		return m.Sponsor
	}
	return ""
}

func (m *ActivityInfoUpdateInput) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ActivityInfoUpdateInput) GetExtInfo() string {
	if m != nil {
		return m.ExtInfo
	}
	return ""
}

func (m *ActivityInfoUpdateInput) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type ActivityInfoUpdateOutput struct {
	Success              string   `protobuf:"bytes,1,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivityInfoUpdateOutput) Reset()         { *m = ActivityInfoUpdateOutput{} }
func (m *ActivityInfoUpdateOutput) String() string { return proto.CompactTextString(m) }
func (*ActivityInfoUpdateOutput) ProtoMessage()    {}
func (*ActivityInfoUpdateOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{11}
}

func (m *ActivityInfoUpdateOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityInfoUpdateOutput.Unmarshal(m, b)
}
func (m *ActivityInfoUpdateOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityInfoUpdateOutput.Marshal(b, m, deterministic)
}
func (m *ActivityInfoUpdateOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityInfoUpdateOutput.Merge(m, src)
}
func (m *ActivityInfoUpdateOutput) XXX_Size() int {
	return xxx_messageInfo_ActivityInfoUpdateOutput.Size(m)
}
func (m *ActivityInfoUpdateOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityInfoUpdateOutput.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityInfoUpdateOutput proto.InternalMessageInfo

func (m *ActivityInfoUpdateOutput) GetSuccess() string {
	if m != nil {
		return m.Success
	}
	return ""
}

//活动成绩记录
type ActivityGradeRecodeInput struct {
	ActID                uint32   `protobuf:"varint,1,opt,name=ActID,proto3" json:"ActID,omitempty"`
	StuID                uint64   `protobuf:"varint,2,opt,name=StuID,proto3" json:"StuID,omitempty"`
	ActName              string   `protobuf:"bytes,3,opt,name=ActName,proto3" json:"ActName,omitempty"`
	StuName              string   `protobuf:"bytes,4,opt,name=StuName,proto3" json:"StuName,omitempty"`
	ExtInfo              string   `protobuf:"bytes,5,opt,name=ExtInfo,proto3" json:"ExtInfo,omitempty"`
	Time                 uint64   `protobuf:"varint,6,opt,name=Time,proto3" json:"Time,omitempty"`
	ActSignature         string   `protobuf:"bytes,7,opt,name=ActSignature,proto3" json:"ActSignature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivityGradeRecodeInput) Reset()         { *m = ActivityGradeRecodeInput{} }
func (m *ActivityGradeRecodeInput) String() string { return proto.CompactTextString(m) }
func (*ActivityGradeRecodeInput) ProtoMessage()    {}
func (*ActivityGradeRecodeInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{12}
}

func (m *ActivityGradeRecodeInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityGradeRecodeInput.Unmarshal(m, b)
}
func (m *ActivityGradeRecodeInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityGradeRecodeInput.Marshal(b, m, deterministic)
}
func (m *ActivityGradeRecodeInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityGradeRecodeInput.Merge(m, src)
}
func (m *ActivityGradeRecodeInput) XXX_Size() int {
	return xxx_messageInfo_ActivityGradeRecodeInput.Size(m)
}
func (m *ActivityGradeRecodeInput) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityGradeRecodeInput.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityGradeRecodeInput proto.InternalMessageInfo

func (m *ActivityGradeRecodeInput) GetActID() uint32 {
	if m != nil {
		return m.ActID
	}
	return 0
}

func (m *ActivityGradeRecodeInput) GetStuID() uint64 {
	if m != nil {
		return m.StuID
	}
	return 0
}

func (m *ActivityGradeRecodeInput) GetActName() string {
	if m != nil {
		return m.ActName
	}
	return ""
}

func (m *ActivityGradeRecodeInput) GetStuName() string {
	if m != nil {
		return m.StuName
	}
	return ""
}

func (m *ActivityGradeRecodeInput) GetExtInfo() string {
	if m != nil {
		return m.ExtInfo
	}
	return ""
}

func (m *ActivityGradeRecodeInput) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ActivityGradeRecodeInput) GetActSignature() string {
	if m != nil {
		return m.ActSignature
	}
	return ""
}

type ActivityGradeRecodeOutput struct {
	Success              string   `protobuf:"bytes,1,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivityGradeRecodeOutput) Reset()         { *m = ActivityGradeRecodeOutput{} }
func (m *ActivityGradeRecodeOutput) String() string { return proto.CompactTextString(m) }
func (*ActivityGradeRecodeOutput) ProtoMessage()    {}
func (*ActivityGradeRecodeOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{13}
}

func (m *ActivityGradeRecodeOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityGradeRecodeOutput.Unmarshal(m, b)
}
func (m *ActivityGradeRecodeOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityGradeRecodeOutput.Marshal(b, m, deterministic)
}
func (m *ActivityGradeRecodeOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityGradeRecodeOutput.Merge(m, src)
}
func (m *ActivityGradeRecodeOutput) XXX_Size() int {
	return xxx_messageInfo_ActivityGradeRecodeOutput.Size(m)
}
func (m *ActivityGradeRecodeOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityGradeRecodeOutput.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityGradeRecodeOutput proto.InternalMessageInfo

func (m *ActivityGradeRecodeOutput) GetSuccess() string {
	if m != nil {
		return m.Success
	}
	return ""
}

//证书信息初始化
type CertInfoInitInput struct {
	CertID               uint64   `protobuf:"varint,1,opt,name=CertID,proto3" json:"CertID,omitempty"`
	StuID                uint64   `protobuf:"varint,2,opt,name=StuID,proto3" json:"StuID,omitempty"`
	StuName              string   `protobuf:"bytes,3,opt,name=StuName,proto3" json:"StuName,omitempty"`
	UsName               string   `protobuf:"bytes,4,opt,name=UsName,proto3" json:"UsName,omitempty"`
	Major                string   `protobuf:"bytes,5,opt,name=Major,proto3" json:"Major,omitempty"`
	StudyTime            string   `protobuf:"bytes,6,opt,name=StudyTime,proto3" json:"StudyTime,omitempty"`
	CertStatus           string   `protobuf:"bytes,7,opt,name=CertStatus,proto3" json:"CertStatus,omitempty"`
	ExtInfo              string   `protobuf:"bytes,8,opt,name=ExtInfo,proto3" json:"ExtInfo,omitempty"`
	Time                 uint64   `protobuf:"varint,9,opt,name=Time,proto3" json:"Time,omitempty"`
	CertSignature        string   `protobuf:"bytes,10,opt,name=CertSignature,proto3" json:"CertSignature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CertInfoInitInput) Reset()         { *m = CertInfoInitInput{} }
func (m *CertInfoInitInput) String() string { return proto.CompactTextString(m) }
func (*CertInfoInitInput) ProtoMessage()    {}
func (*CertInfoInitInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{14}
}

func (m *CertInfoInitInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertInfoInitInput.Unmarshal(m, b)
}
func (m *CertInfoInitInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertInfoInitInput.Marshal(b, m, deterministic)
}
func (m *CertInfoInitInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertInfoInitInput.Merge(m, src)
}
func (m *CertInfoInitInput) XXX_Size() int {
	return xxx_messageInfo_CertInfoInitInput.Size(m)
}
func (m *CertInfoInitInput) XXX_DiscardUnknown() {
	xxx_messageInfo_CertInfoInitInput.DiscardUnknown(m)
}

var xxx_messageInfo_CertInfoInitInput proto.InternalMessageInfo

func (m *CertInfoInitInput) GetCertID() uint64 {
	if m != nil {
		return m.CertID
	}
	return 0
}

func (m *CertInfoInitInput) GetStuID() uint64 {
	if m != nil {
		return m.StuID
	}
	return 0
}

func (m *CertInfoInitInput) GetStuName() string {
	if m != nil {
		return m.StuName
	}
	return ""
}

func (m *CertInfoInitInput) GetUsName() string {
	if m != nil {
		return m.UsName
	}
	return ""
}

func (m *CertInfoInitInput) GetMajor() string {
	if m != nil {
		return m.Major
	}
	return ""
}

func (m *CertInfoInitInput) GetStudyTime() string {
	if m != nil {
		return m.StudyTime
	}
	return ""
}

func (m *CertInfoInitInput) GetCertStatus() string {
	if m != nil {
		return m.CertStatus
	}
	return ""
}

func (m *CertInfoInitInput) GetExtInfo() string {
	if m != nil {
		return m.ExtInfo
	}
	return ""
}

func (m *CertInfoInitInput) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *CertInfoInitInput) GetCertSignature() string {
	if m != nil {
		return m.CertSignature
	}
	return ""
}

type CertInfoInitOutput struct {
	Success              string   `protobuf:"bytes,1,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CertInfoInitOutput) Reset()         { *m = CertInfoInitOutput{} }
func (m *CertInfoInitOutput) String() string { return proto.CompactTextString(m) }
func (*CertInfoInitOutput) ProtoMessage()    {}
func (*CertInfoInitOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{15}
}

func (m *CertInfoInitOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertInfoInitOutput.Unmarshal(m, b)
}
func (m *CertInfoInitOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertInfoInitOutput.Marshal(b, m, deterministic)
}
func (m *CertInfoInitOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertInfoInitOutput.Merge(m, src)
}
func (m *CertInfoInitOutput) XXX_Size() int {
	return xxx_messageInfo_CertInfoInitOutput.Size(m)
}
func (m *CertInfoInitOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_CertInfoInitOutput.DiscardUnknown(m)
}

var xxx_messageInfo_CertInfoInitOutput proto.InternalMessageInfo

func (m *CertInfoInitOutput) GetSuccess() string {
	if m != nil {
		return m.Success
	}
	return ""
}

//证书信息更新
type CertInfoUpdateInput struct {
	CertID               uint64   `protobuf:"varint,1,opt,name=CertID,proto3" json:"CertID,omitempty"`
	StuID                uint64   `protobuf:"varint,2,opt,name=StuID,proto3" json:"StuID,omitempty"`
	StuName              string   `protobuf:"bytes,3,opt,name=StuName,proto3" json:"StuName,omitempty"`
	UsName               string   `protobuf:"bytes,4,opt,name=UsName,proto3" json:"UsName,omitempty"`
	Major                string   `protobuf:"bytes,5,opt,name=Major,proto3" json:"Major,omitempty"`
	StudyTime            string   `protobuf:"bytes,6,opt,name=StudyTime,proto3" json:"StudyTime,omitempty"`
	CertStatus           string   `protobuf:"bytes,7,opt,name=CertStatus,proto3" json:"CertStatus,omitempty"`
	ExtInfo              string   `protobuf:"bytes,8,opt,name=ExtInfo,proto3" json:"ExtInfo,omitempty"`
	Time                 uint64   `protobuf:"varint,9,opt,name=Time,proto3" json:"Time,omitempty"`
	CertSignature        string   `protobuf:"bytes,10,opt,name=CertSignature,proto3" json:"CertSignature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CertInfoUpdateInput) Reset()         { *m = CertInfoUpdateInput{} }
func (m *CertInfoUpdateInput) String() string { return proto.CompactTextString(m) }
func (*CertInfoUpdateInput) ProtoMessage()    {}
func (*CertInfoUpdateInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{16}
}

func (m *CertInfoUpdateInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertInfoUpdateInput.Unmarshal(m, b)
}
func (m *CertInfoUpdateInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertInfoUpdateInput.Marshal(b, m, deterministic)
}
func (m *CertInfoUpdateInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertInfoUpdateInput.Merge(m, src)
}
func (m *CertInfoUpdateInput) XXX_Size() int {
	return xxx_messageInfo_CertInfoUpdateInput.Size(m)
}
func (m *CertInfoUpdateInput) XXX_DiscardUnknown() {
	xxx_messageInfo_CertInfoUpdateInput.DiscardUnknown(m)
}

var xxx_messageInfo_CertInfoUpdateInput proto.InternalMessageInfo

func (m *CertInfoUpdateInput) GetCertID() uint64 {
	if m != nil {
		return m.CertID
	}
	return 0
}

func (m *CertInfoUpdateInput) GetStuID() uint64 {
	if m != nil {
		return m.StuID
	}
	return 0
}

func (m *CertInfoUpdateInput) GetStuName() string {
	if m != nil {
		return m.StuName
	}
	return ""
}

func (m *CertInfoUpdateInput) GetUsName() string {
	if m != nil {
		return m.UsName
	}
	return ""
}

func (m *CertInfoUpdateInput) GetMajor() string {
	if m != nil {
		return m.Major
	}
	return ""
}

func (m *CertInfoUpdateInput) GetStudyTime() string {
	if m != nil {
		return m.StudyTime
	}
	return ""
}

func (m *CertInfoUpdateInput) GetCertStatus() string {
	if m != nil {
		return m.CertStatus
	}
	return ""
}

func (m *CertInfoUpdateInput) GetExtInfo() string {
	if m != nil {
		return m.ExtInfo
	}
	return ""
}

func (m *CertInfoUpdateInput) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *CertInfoUpdateInput) GetCertSignature() string {
	if m != nil {
		return m.CertSignature
	}
	return ""
}

type CertInfoUpdateOutput struct {
	Success              string   `protobuf:"bytes,1,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CertInfoUpdateOutput) Reset()         { *m = CertInfoUpdateOutput{} }
func (m *CertInfoUpdateOutput) String() string { return proto.CompactTextString(m) }
func (*CertInfoUpdateOutput) ProtoMessage()    {}
func (*CertInfoUpdateOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{17}
}

func (m *CertInfoUpdateOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertInfoUpdateOutput.Unmarshal(m, b)
}
func (m *CertInfoUpdateOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertInfoUpdateOutput.Marshal(b, m, deterministic)
}
func (m *CertInfoUpdateOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertInfoUpdateOutput.Merge(m, src)
}
func (m *CertInfoUpdateOutput) XXX_Size() int {
	return xxx_messageInfo_CertInfoUpdateOutput.Size(m)
}
func (m *CertInfoUpdateOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_CertInfoUpdateOutput.DiscardUnknown(m)
}

var xxx_messageInfo_CertInfoUpdateOutput proto.InternalMessageInfo

func (m *CertInfoUpdateOutput) GetSuccess() string {
	if m != nil {
		return m.Success
	}
	return ""
}

//学生信息查询
type StuInfoQueryInput struct {
	StuID                uint64   `protobuf:"varint,1,opt,name=StuID,proto3" json:"StuID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StuInfoQueryInput) Reset()         { *m = StuInfoQueryInput{} }
func (m *StuInfoQueryInput) String() string { return proto.CompactTextString(m) }
func (*StuInfoQueryInput) ProtoMessage()    {}
func (*StuInfoQueryInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{18}
}

func (m *StuInfoQueryInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StuInfoQueryInput.Unmarshal(m, b)
}
func (m *StuInfoQueryInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StuInfoQueryInput.Marshal(b, m, deterministic)
}
func (m *StuInfoQueryInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StuInfoQueryInput.Merge(m, src)
}
func (m *StuInfoQueryInput) XXX_Size() int {
	return xxx_messageInfo_StuInfoQueryInput.Size(m)
}
func (m *StuInfoQueryInput) XXX_DiscardUnknown() {
	xxx_messageInfo_StuInfoQueryInput.DiscardUnknown(m)
}

var xxx_messageInfo_StuInfoQueryInput proto.InternalMessageInfo

func (m *StuInfoQueryInput) GetStuID() uint64 {
	if m != nil {
		return m.StuID
	}
	return 0
}

type StuInfoQueryOutput struct {
	StuID                uint64   `protobuf:"varint,1,opt,name=StuID,proto3" json:"StuID,omitempty"`
	StuName              string   `protobuf:"bytes,2,opt,name=StuName,proto3" json:"StuName,omitempty"`
	UsName               string   `protobuf:"bytes,3,opt,name=UsName,proto3" json:"UsName,omitempty"`
	Major                string   `protobuf:"bytes,4,opt,name=Major,proto3" json:"Major,omitempty"`
	ExtInfo              string   `protobuf:"bytes,5,opt,name=ExtInfo,proto3" json:"ExtInfo,omitempty"`
	Time                 uint64   `protobuf:"varint,6,opt,name=Time,proto3" json:"Time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StuInfoQueryOutput) Reset()         { *m = StuInfoQueryOutput{} }
func (m *StuInfoQueryOutput) String() string { return proto.CompactTextString(m) }
func (*StuInfoQueryOutput) ProtoMessage()    {}
func (*StuInfoQueryOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{19}
}

func (m *StuInfoQueryOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StuInfoQueryOutput.Unmarshal(m, b)
}
func (m *StuInfoQueryOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StuInfoQueryOutput.Marshal(b, m, deterministic)
}
func (m *StuInfoQueryOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StuInfoQueryOutput.Merge(m, src)
}
func (m *StuInfoQueryOutput) XXX_Size() int {
	return xxx_messageInfo_StuInfoQueryOutput.Size(m)
}
func (m *StuInfoQueryOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_StuInfoQueryOutput.DiscardUnknown(m)
}

var xxx_messageInfo_StuInfoQueryOutput proto.InternalMessageInfo

func (m *StuInfoQueryOutput) GetStuID() uint64 {
	if m != nil {
		return m.StuID
	}
	return 0
}

func (m *StuInfoQueryOutput) GetStuName() string {
	if m != nil {
		return m.StuName
	}
	return ""
}

func (m *StuInfoQueryOutput) GetUsName() string {
	if m != nil {
		return m.UsName
	}
	return ""
}

func (m *StuInfoQueryOutput) GetMajor() string {
	if m != nil {
		return m.Major
	}
	return ""
}

func (m *StuInfoQueryOutput) GetExtInfo() string {
	if m != nil {
		return m.ExtInfo
	}
	return ""
}

func (m *StuInfoQueryOutput) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

//学生成绩查询
type StuGradeQueryInput struct {
	StuID                uint64   `protobuf:"varint,1,opt,name=StuID,proto3" json:"StuID,omitempty"`
	Term                 uint32   `protobuf:"varint,2,opt,name=Term,proto3" json:"Term,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StuGradeQueryInput) Reset()         { *m = StuGradeQueryInput{} }
func (m *StuGradeQueryInput) String() string { return proto.CompactTextString(m) }
func (*StuGradeQueryInput) ProtoMessage()    {}
func (*StuGradeQueryInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{20}
}

func (m *StuGradeQueryInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StuGradeQueryInput.Unmarshal(m, b)
}
func (m *StuGradeQueryInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StuGradeQueryInput.Marshal(b, m, deterministic)
}
func (m *StuGradeQueryInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StuGradeQueryInput.Merge(m, src)
}
func (m *StuGradeQueryInput) XXX_Size() int {
	return xxx_messageInfo_StuGradeQueryInput.Size(m)
}
func (m *StuGradeQueryInput) XXX_DiscardUnknown() {
	xxx_messageInfo_StuGradeQueryInput.DiscardUnknown(m)
}

var xxx_messageInfo_StuGradeQueryInput proto.InternalMessageInfo

func (m *StuGradeQueryInput) GetStuID() uint64 {
	if m != nil {
		return m.StuID
	}
	return 0
}

func (m *StuGradeQueryInput) GetTerm() uint32 {
	if m != nil {
		return m.Term
	}
	return 0
}

type StuGradeQueryOutput struct {
	StuID                uint64   `protobuf:"varint,1,opt,name=StuID,proto3" json:"StuID,omitempty"`
	StuName              string   `protobuf:"bytes,2,opt,name=StuName,proto3" json:"StuName,omitempty"`
	Term                 uint32   `protobuf:"varint,3,opt,name=Term,proto3" json:"Term,omitempty"`
	AverageGrades        uint32   `protobuf:"varint,4,opt,name=AverageGrades,proto3" json:"AverageGrades,omitempty"`
	ExtInfo              string   `protobuf:"bytes,5,opt,name=ExtInfo,proto3" json:"ExtInfo,omitempty"`
	Time                 uint64   `protobuf:"varint,6,opt,name=Time,proto3" json:"Time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StuGradeQueryOutput) Reset()         { *m = StuGradeQueryOutput{} }
func (m *StuGradeQueryOutput) String() string { return proto.CompactTextString(m) }
func (*StuGradeQueryOutput) ProtoMessage()    {}
func (*StuGradeQueryOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{21}
}

func (m *StuGradeQueryOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StuGradeQueryOutput.Unmarshal(m, b)
}
func (m *StuGradeQueryOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StuGradeQueryOutput.Marshal(b, m, deterministic)
}
func (m *StuGradeQueryOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StuGradeQueryOutput.Merge(m, src)
}
func (m *StuGradeQueryOutput) XXX_Size() int {
	return xxx_messageInfo_StuGradeQueryOutput.Size(m)
}
func (m *StuGradeQueryOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_StuGradeQueryOutput.DiscardUnknown(m)
}

var xxx_messageInfo_StuGradeQueryOutput proto.InternalMessageInfo

func (m *StuGradeQueryOutput) GetStuID() uint64 {
	if m != nil {
		return m.StuID
	}
	return 0
}

func (m *StuGradeQueryOutput) GetStuName() string {
	if m != nil {
		return m.StuName
	}
	return ""
}

func (m *StuGradeQueryOutput) GetTerm() uint32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *StuGradeQueryOutput) GetAverageGrades() uint32 {
	if m != nil {
		return m.AverageGrades
	}
	return 0
}

func (m *StuGradeQueryOutput) GetExtInfo() string {
	if m != nil {
		return m.ExtInfo
	}
	return ""
}

func (m *StuGradeQueryOutput) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

//学生活动查询
type StuActQueryInput struct {
	StuID                uint64   `protobuf:"varint,1,opt,name=StuID,proto3" json:"StuID,omitempty"`
	ActID                uint32   `protobuf:"varint,2,opt,name=ActID,proto3" json:"ActID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StuActQueryInput) Reset()         { *m = StuActQueryInput{} }
func (m *StuActQueryInput) String() string { return proto.CompactTextString(m) }
func (*StuActQueryInput) ProtoMessage()    {}
func (*StuActQueryInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{22}
}

func (m *StuActQueryInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StuActQueryInput.Unmarshal(m, b)
}
func (m *StuActQueryInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StuActQueryInput.Marshal(b, m, deterministic)
}
func (m *StuActQueryInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StuActQueryInput.Merge(m, src)
}
func (m *StuActQueryInput) XXX_Size() int {
	return xxx_messageInfo_StuActQueryInput.Size(m)
}
func (m *StuActQueryInput) XXX_DiscardUnknown() {
	xxx_messageInfo_StuActQueryInput.DiscardUnknown(m)
}

var xxx_messageInfo_StuActQueryInput proto.InternalMessageInfo

func (m *StuActQueryInput) GetStuID() uint64 {
	if m != nil {
		return m.StuID
	}
	return 0
}

func (m *StuActQueryInput) GetActID() uint32 {
	if m != nil {
		return m.ActID
	}
	return 0
}

type StuActQueryOutput struct {
	ActID                uint32   `protobuf:"varint,1,opt,name=ActID,proto3" json:"ActID,omitempty"`
	StuID                uint64   `protobuf:"varint,2,opt,name=StuID,proto3" json:"StuID,omitempty"`
	ActName              string   `protobuf:"bytes,3,opt,name=ActName,proto3" json:"ActName,omitempty"`
	StuName              string   `protobuf:"bytes,4,opt,name=StuName,proto3" json:"StuName,omitempty"`
	ExtInfo              string   `protobuf:"bytes,5,opt,name=ExtInfo,proto3" json:"ExtInfo,omitempty"`
	Time                 uint64   `protobuf:"varint,6,opt,name=Time,proto3" json:"Time,omitempty"`
	ActSignature         string   `protobuf:"bytes,7,opt,name=ActSignature,proto3" json:"ActSignature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StuActQueryOutput) Reset()         { *m = StuActQueryOutput{} }
func (m *StuActQueryOutput) String() string { return proto.CompactTextString(m) }
func (*StuActQueryOutput) ProtoMessage()    {}
func (*StuActQueryOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{23}
}

func (m *StuActQueryOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StuActQueryOutput.Unmarshal(m, b)
}
func (m *StuActQueryOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StuActQueryOutput.Marshal(b, m, deterministic)
}
func (m *StuActQueryOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StuActQueryOutput.Merge(m, src)
}
func (m *StuActQueryOutput) XXX_Size() int {
	return xxx_messageInfo_StuActQueryOutput.Size(m)
}
func (m *StuActQueryOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_StuActQueryOutput.DiscardUnknown(m)
}

var xxx_messageInfo_StuActQueryOutput proto.InternalMessageInfo

func (m *StuActQueryOutput) GetActID() uint32 {
	if m != nil {
		return m.ActID
	}
	return 0
}

func (m *StuActQueryOutput) GetStuID() uint64 {
	if m != nil {
		return m.StuID
	}
	return 0
}

func (m *StuActQueryOutput) GetActName() string {
	if m != nil {
		return m.ActName
	}
	return ""
}

func (m *StuActQueryOutput) GetStuName() string {
	if m != nil {
		return m.StuName
	}
	return ""
}

func (m *StuActQueryOutput) GetExtInfo() string {
	if m != nil {
		return m.ExtInfo
	}
	return ""
}

func (m *StuActQueryOutput) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *StuActQueryOutput) GetActSignature() string {
	if m != nil {
		return m.ActSignature
	}
	return ""
}

//学生证书查询
type StuCertQueryInput struct {
	CertID               uint64   `protobuf:"varint,1,opt,name=CertID,proto3" json:"CertID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StuCertQueryInput) Reset()         { *m = StuCertQueryInput{} }
func (m *StuCertQueryInput) String() string { return proto.CompactTextString(m) }
func (*StuCertQueryInput) ProtoMessage()    {}
func (*StuCertQueryInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{24}
}

func (m *StuCertQueryInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StuCertQueryInput.Unmarshal(m, b)
}
func (m *StuCertQueryInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StuCertQueryInput.Marshal(b, m, deterministic)
}
func (m *StuCertQueryInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StuCertQueryInput.Merge(m, src)
}
func (m *StuCertQueryInput) XXX_Size() int {
	return xxx_messageInfo_StuCertQueryInput.Size(m)
}
func (m *StuCertQueryInput) XXX_DiscardUnknown() {
	xxx_messageInfo_StuCertQueryInput.DiscardUnknown(m)
}

var xxx_messageInfo_StuCertQueryInput proto.InternalMessageInfo

func (m *StuCertQueryInput) GetCertID() uint64 {
	if m != nil {
		return m.CertID
	}
	return 0
}

type StuCertQueryOutput struct {
	CertID               uint64   `protobuf:"varint,1,opt,name=CertID,proto3" json:"CertID,omitempty"`
	StuID                uint64   `protobuf:"varint,2,opt,name=StuID,proto3" json:"StuID,omitempty"`
	StuName              string   `protobuf:"bytes,3,opt,name=StuName,proto3" json:"StuName,omitempty"`
	UsName               string   `protobuf:"bytes,4,opt,name=UsName,proto3" json:"UsName,omitempty"`
	Major                string   `protobuf:"bytes,5,opt,name=Major,proto3" json:"Major,omitempty"`
	StudyTime            string   `protobuf:"bytes,6,opt,name=StudyTime,proto3" json:"StudyTime,omitempty"`
	CertStatus           string   `protobuf:"bytes,7,opt,name=CertStatus,proto3" json:"CertStatus,omitempty"`
	ExtInfo              string   `protobuf:"bytes,8,opt,name=ExtInfo,proto3" json:"ExtInfo,omitempty"`
	Time                 uint64   `protobuf:"varint,9,opt,name=Time,proto3" json:"Time,omitempty"`
	CertSignature        string   `protobuf:"bytes,10,opt,name=CertSignature,proto3" json:"CertSignature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StuCertQueryOutput) Reset()         { *m = StuCertQueryOutput{} }
func (m *StuCertQueryOutput) String() string { return proto.CompactTextString(m) }
func (*StuCertQueryOutput) ProtoMessage()    {}
func (*StuCertQueryOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{25}
}

func (m *StuCertQueryOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StuCertQueryOutput.Unmarshal(m, b)
}
func (m *StuCertQueryOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StuCertQueryOutput.Marshal(b, m, deterministic)
}
func (m *StuCertQueryOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StuCertQueryOutput.Merge(m, src)
}
func (m *StuCertQueryOutput) XXX_Size() int {
	return xxx_messageInfo_StuCertQueryOutput.Size(m)
}
func (m *StuCertQueryOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_StuCertQueryOutput.DiscardUnknown(m)
}

var xxx_messageInfo_StuCertQueryOutput proto.InternalMessageInfo

func (m *StuCertQueryOutput) GetCertID() uint64 {
	if m != nil {
		return m.CertID
	}
	return 0
}

func (m *StuCertQueryOutput) GetStuID() uint64 {
	if m != nil {
		return m.StuID
	}
	return 0
}

func (m *StuCertQueryOutput) GetStuName() string {
	if m != nil {
		return m.StuName
	}
	return ""
}

func (m *StuCertQueryOutput) GetUsName() string {
	if m != nil {
		return m.UsName
	}
	return ""
}

func (m *StuCertQueryOutput) GetMajor() string {
	if m != nil {
		return m.Major
	}
	return ""
}

func (m *StuCertQueryOutput) GetStudyTime() string {
	if m != nil {
		return m.StudyTime
	}
	return ""
}

func (m *StuCertQueryOutput) GetCertStatus() string {
	if m != nil {
		return m.CertStatus
	}
	return ""
}

func (m *StuCertQueryOutput) GetExtInfo() string {
	if m != nil {
		return m.ExtInfo
	}
	return ""
}

func (m *StuCertQueryOutput) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *StuCertQueryOutput) GetCertSignature() string {
	if m != nil {
		return m.CertSignature
	}
	return ""
}

//活动信息查询
type ActInfoQueryInput struct {
	ActID                uint32   `protobuf:"varint,1,opt,name=ActID,proto3" json:"ActID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActInfoQueryInput) Reset()         { *m = ActInfoQueryInput{} }
func (m *ActInfoQueryInput) String() string { return proto.CompactTextString(m) }
func (*ActInfoQueryInput) ProtoMessage()    {}
func (*ActInfoQueryInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{26}
}

func (m *ActInfoQueryInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActInfoQueryInput.Unmarshal(m, b)
}
func (m *ActInfoQueryInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActInfoQueryInput.Marshal(b, m, deterministic)
}
func (m *ActInfoQueryInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActInfoQueryInput.Merge(m, src)
}
func (m *ActInfoQueryInput) XXX_Size() int {
	return xxx_messageInfo_ActInfoQueryInput.Size(m)
}
func (m *ActInfoQueryInput) XXX_DiscardUnknown() {
	xxx_messageInfo_ActInfoQueryInput.DiscardUnknown(m)
}

var xxx_messageInfo_ActInfoQueryInput proto.InternalMessageInfo

func (m *ActInfoQueryInput) GetActID() uint32 {
	if m != nil {
		return m.ActID
	}
	return 0
}

type ActInfoQueryOutput struct {
	ActID                uint32   `protobuf:"varint,1,opt,name=ActID,proto3" json:"ActID,omitempty"`
	ActName              string   `protobuf:"bytes,2,opt,name=ActName,proto3" json:"ActName,omitempty"`
	Sponsor              string   `protobuf:"bytes,3,opt,name=Sponsor,proto3" json:"Sponsor,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=Status,proto3" json:"Status,omitempty"`
	ExtInfo              string   `protobuf:"bytes,5,opt,name=ExtInfo,proto3" json:"ExtInfo,omitempty"`
	Time                 uint64   `protobuf:"varint,6,opt,name=Time,proto3" json:"Time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActInfoQueryOutput) Reset()         { *m = ActInfoQueryOutput{} }
func (m *ActInfoQueryOutput) String() string { return proto.CompactTextString(m) }
func (*ActInfoQueryOutput) ProtoMessage()    {}
func (*ActInfoQueryOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{27}
}

func (m *ActInfoQueryOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActInfoQueryOutput.Unmarshal(m, b)
}
func (m *ActInfoQueryOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActInfoQueryOutput.Marshal(b, m, deterministic)
}
func (m *ActInfoQueryOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActInfoQueryOutput.Merge(m, src)
}
func (m *ActInfoQueryOutput) XXX_Size() int {
	return xxx_messageInfo_ActInfoQueryOutput.Size(m)
}
func (m *ActInfoQueryOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_ActInfoQueryOutput.DiscardUnknown(m)
}

var xxx_messageInfo_ActInfoQueryOutput proto.InternalMessageInfo

func (m *ActInfoQueryOutput) GetActID() uint32 {
	if m != nil {
		return m.ActID
	}
	return 0
}

func (m *ActInfoQueryOutput) GetActName() string {
	if m != nil {
		return m.ActName
	}
	return ""
}

func (m *ActInfoQueryOutput) GetSponsor() string {
	if m != nil {
		return m.Sponsor
	}
	return ""
}

func (m *ActInfoQueryOutput) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ActInfoQueryOutput) GetExtInfo() string {
	if m != nil {
		return m.ExtInfo
	}
	return ""
}

func (m *ActInfoQueryOutput) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func init() {
	proto.RegisterType((*StuInfoInitInput)(nil), "StuInfoInitInput")
	proto.RegisterType((*StuInfoInitOutput)(nil), "StuInfoInitOutput")
	proto.RegisterType((*StudentInfoUpdateInput)(nil), "StudentInfoUpdateInput")
	proto.RegisterType((*StuInfoUpdateOutput)(nil), "StuInfoUpdateOutput")
	proto.RegisterType((*StuGradeRecodeInput)(nil), "StuGradeRecodeInput")
	proto.RegisterType((*StuGradeRecodeOutput)(nil), "StuGradeRecodeOutput")
	proto.RegisterType((*StuGradeUpdateInput)(nil), "StuGradeUpdateInput")
	proto.RegisterType((*StuGradeUpdateOutput)(nil), "StuGradeUpdateOutput")
	proto.RegisterType((*ActivityRegisterInput)(nil), "ActivityRegisterInput")
	proto.RegisterType((*ActivityRegisterOutput)(nil), "ActivityRegisterOutput")
	proto.RegisterType((*ActivityInfoUpdateInput)(nil), "ActivityInfoUpdateInput")
	proto.RegisterType((*ActivityInfoUpdateOutput)(nil), "ActivityInfoUpdateOutput")
	proto.RegisterType((*ActivityGradeRecodeInput)(nil), "ActivityGradeRecodeInput")
	proto.RegisterType((*ActivityGradeRecodeOutput)(nil), "ActivityGradeRecodeOutput")
	proto.RegisterType((*CertInfoInitInput)(nil), "CertInfoInitInput")
	proto.RegisterType((*CertInfoInitOutput)(nil), "CertInfoInitOutput")
	proto.RegisterType((*CertInfoUpdateInput)(nil), "CertInfoUpdateInput")
	proto.RegisterType((*CertInfoUpdateOutput)(nil), "CertInfoUpdateOutput")
	proto.RegisterType((*StuInfoQueryInput)(nil), "StuInfoQueryInput")
	proto.RegisterType((*StuInfoQueryOutput)(nil), "StuInfoQueryOutput")
	proto.RegisterType((*StuGradeQueryInput)(nil), "StuGradeQueryInput")
	proto.RegisterType((*StuGradeQueryOutput)(nil), "StuGradeQueryOutput")
	proto.RegisterType((*StuActQueryInput)(nil), "StuActQueryInput")
	proto.RegisterType((*StuActQueryOutput)(nil), "StuActQueryOutput")
	proto.RegisterType((*StuCertQueryInput)(nil), "StuCertQueryInput")
	proto.RegisterType((*StuCertQueryOutput)(nil), "StuCertQueryOutput")
	proto.RegisterType((*ActInfoQueryInput)(nil), "ActInfoQueryInput")
	proto.RegisterType((*ActInfoQueryOutput)(nil), "ActInfoQueryOutput")
}

func init() { proto.RegisterFile("transaction.proto", fileDescriptor_2cc4e03d2c28c490) }

var fileDescriptor_2cc4e03d2c28c490 = []byte{
	// 914 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0x5d, 0x6b, 0xf4, 0x44,
	0x14, 0x4e, 0xb6, 0xdb, 0xad, 0x7b, 0xec, 0x96, 0xee, 0xec, 0x47, 0xd3, 0x20, 0x52, 0x86, 0x5e,
	0xb4, 0x88, 0x63, 0x89, 0x1f, 0x50, 0x90, 0xea, 0xa2, 0x45, 0x17, 0x69, 0xa5, 0x59, 0x7b, 0xe1,
	0x65, 0xcc, 0x8e, 0x65, 0x85, 0x26, 0x4b, 0x32, 0x29, 0xf6, 0xb7, 0xf8, 0x81, 0x17, 0x82, 0x78,
	0xe1, 0xcf, 0xf0, 0xce, 0x1f, 0x25, 0x33, 0xf9, 0x9a, 0x49, 0x66, 0x1b, 0xd7, 0xc2, 0xdb, 0xbe,
	0xd0, 0xbb, 0x3d, 0x27, 0x99, 0x93, 0xf3, 0x9c, 0x39, 0x73, 0x9e, 0x67, 0x16, 0xfa, 0x2c, 0xf2,
	0x82, 0xd8, 0xf3, 0xd9, 0x22, 0x0c, 0xc8, 0x32, 0x0a, 0x59, 0x88, 0x7f, 0x35, 0x61, 0x77, 0xc6,
	0x92, 0x69, 0xf0, 0x7d, 0x38, 0x0d, 0x16, 0x6c, 0x1a, 0x2c, 0x13, 0x86, 0x86, 0xb0, 0xc9, 0x7d,
	0x9f, 0x5b, 0xe6, 0x81, 0x79, 0xd4, 0x76, 0x53, 0x03, 0x59, 0xb0, 0x35, 0x63, 0xc9, 0xa5, 0x77,
	0x4b, 0xad, 0xd6, 0x81, 0x79, 0xd4, 0x75, 0x73, 0x13, 0x8d, 0xa1, 0x73, 0x1d, 0x8b, 0x07, 0x1b,
	0xe2, 0x41, 0x66, 0xf1, 0x38, 0x17, 0xde, 0x0f, 0x61, 0x64, 0xb5, 0x85, 0x3b, 0x35, 0x78, 0x9c,
	0xf3, 0x1f, 0x19, 0xff, 0xa2, 0xb5, 0x99, 0xc6, 0xc9, 0x4c, 0x84, 0xa0, 0xfd, 0xcd, 0xe2, 0x96,
	0x5a, 0x1d, 0xf1, 0x59, 0xf1, 0x1b, 0xbf, 0x0b, 0x7d, 0x29, 0xbf, 0xaf, 0x13, 0xc6, 0x13, 0xe4,
	0xa9, 0x24, 0xbe, 0x4f, 0xe3, 0x58, 0xa4, 0xc8, 0x53, 0x49, 0x4d, 0xfc, 0xbb, 0x09, 0xe3, 0x19,
	0x4b, 0xe6, 0x34, 0x10, 0x21, 0xaf, 0x97, 0x73, 0x8f, 0xd1, 0xe7, 0x87, 0xea, 0x3d, 0x18, 0x64,
	0xa8, 0xd2, 0x0c, 0x1b, 0x71, 0xfd, 0x65, 0x8a, 0x15, 0x5f, 0x44, 0xde, 0x9c, 0xba, 0xd4, 0x0f,
	0xe7, 0xff, 0x13, 0x14, 0x4f, 0x86, 0x46, 0xb7, 0x02, 0x52, 0xcf, 0x15, 0xbf, 0xd1, 0x21, 0xf4,
	0x26, 0x77, 0x34, 0xf2, 0x6e, 0xa8, 0x08, 0x1f, 0x0b, 0x60, 0x3d, 0x57, 0x75, 0xae, 0x09, 0xf0,
	0x04, 0x86, 0x6a, 0xba, 0x6b, 0x21, 0x7c, 0xcc, 0xb6, 0x3d, 0x01, 0xc2, 0xff, 0xb8, 0x87, 0x7f,
	0x98, 0x30, 0x9a, 0xf8, 0x6c, 0x71, 0xb7, 0x60, 0xf7, 0x2e, 0xbd, 0x59, 0xc4, 0x8c, 0x46, 0x05,
	0xc6, 0x89, 0xcf, 0x32, 0x8c, 0x3d, 0x37, 0x35, 0x78, 0xa4, 0x89, 0xcf, 0x64, 0x8c, 0x99, 0x29,
	0xbe, 0xb1, 0x0c, 0x83, 0x38, 0x8c, 0xb2, 0xde, 0xcc, 0x4d, 0xde, 0xb4, 0x33, 0xe6, 0xb1, 0x24,
	0xce, 0xba, 0x33, 0xb3, 0xd6, 0xc4, 0xe6, 0xc0, 0xb8, 0x9a, 0x68, 0x23, 0xba, 0x3f, 0x4d, 0xd8,
	0xcb, 0x17, 0x69, 0x8e, 0xde, 0xb3, 0xc2, 0xf7, 0x01, 0x58, 0xf5, 0x54, 0x1b, 0x11, 0xfe, 0x63,
	0x96, 0xcb, 0x74, 0x07, 0x51, 0x03, 0xb1, 0x68, 0xde, 0x56, 0xa5, 0x79, 0x73, 0xe0, 0x1b, 0x75,
	0xe0, 0x59, 0x5b, 0xb7, 0xd5, 0xb6, 0x5e, 0x0b, 0x20, 0xc2, 0xb0, 0x3d, 0xf1, 0xd9, 0x6c, 0x71,
	0x13, 0x78, 0x2c, 0x89, 0xa8, 0xb5, 0x25, 0x96, 0x28, 0x3e, 0xfc, 0x21, 0xec, 0x6b, 0xd0, 0x34,
	0x56, 0xe1, 0xa7, 0x16, 0xf4, 0x3f, 0xa3, 0x11, 0x53, 0x29, 0x63, 0x0c, 0x1d, 0xe1, 0xcc, 0x8f,
	0x69, 0x66, 0xad, 0x2e, 0x40, 0x0e, 0x73, 0x63, 0xd5, 0xd0, 0x6d, 0xeb, 0x87, 0xee, 0xa6, 0x3c,
	0x74, 0xdf, 0x82, 0x2e, 0x1f, 0xf6, 0xf7, 0x05, 0xfe, 0xae, 0x5b, 0x3a, 0xd0, 0xdb, 0x00, 0x3c,
	0x8b, 0xac, 0x5f, 0xd2, 0x12, 0x48, 0x1e, 0xb9, 0xa4, 0x6f, 0xe8, 0x4b, 0xda, 0x95, 0x4a, 0x7a,
	0x08, 0x3d, 0xb1, 0xb6, 0xa8, 0x29, 0x88, 0x35, 0xaa, 0x13, 0x13, 0x40, 0x72, 0x71, 0x1a, 0xab,
	0xf9, 0x4b, 0x0b, 0x06, 0xf9, 0x02, 0xf9, 0xc4, 0xbc, 0xd4, 0x33, 0xad, 0xe7, 0x09, 0x0c, 0xd5,
	0xf2, 0x34, 0x56, 0xf4, 0xb8, 0x10, 0x0c, 0x57, 0x09, 0x8d, 0xee, 0x1f, 0x20, 0x11, 0xfc, 0x9b,
	0x09, 0x48, 0x7e, 0x37, 0x8b, 0xfd, 0x9c, 0x84, 0xc2, 0x99, 0xc8, 0x50, 0x9c, 0xcf, 0x26, 0x38,
	0x05, 0xf3, 0xb5, 0x4a, 0xe6, 0x53, 0x58, 0xf5, 0x31, 0x18, 0x5f, 0x15, 0xab, 0x9e, 0x09, 0x39,
	0x3a, 0xf1, 0x59, 0x23, 0xda, 0x62, 0xe0, 0xb6, 0xa4, 0x81, 0x8b, 0xff, 0x36, 0xc5, 0xf6, 0xe7,
	0x01, 0x4a, 0xb4, 0xaf, 0xd9, 0x70, 0x7e, 0x47, 0xc0, 0xe0, 0xad, 0x2f, 0x15, 0x62, 0xc5, 0x50,
	0xc0, 0x3f, 0xb7, 0x44, 0x97, 0x14, 0x6f, 0x67, 0xa8, 0x5f, 0x66, 0x48, 0x5a, 0xcb, 0x63, 0xe8,
	0xf3, 0x0d, 0xaf, 0x4d, 0x84, 0x7a, 0x4b, 0xf0, 0xeb, 0x03, 0x92, 0xdf, 0x7d, 0xb0, 0x7f, 0x9e,
	0x4c, 0xbf, 0x38, 0x5f, 0xc2, 0x9b, 0xd2, 0xa5, 0x08, 0x9d, 0xaa, 0x66, 0x9f, 0x54, 0x6f, 0x74,
	0xf6, 0x88, 0xe8, 0xd4, 0x38, 0x36, 0x9c, 0x2b, 0xe8, 0x29, 0x17, 0x11, 0xf4, 0x69, 0xd5, 0xb1,
	0x47, 0xf4, 0xf7, 0x29, 0x7b, 0x48, 0x34, 0x57, 0x18, 0x11, 0x72, 0x47, 0xfd, 0x18, 0xfa, 0xa4,
	0xe6, 0x19, 0x12, 0xcd, 0x65, 0xe6, 0xa1, 0x2c, 0x77, 0x54, 0xad, 0x2d, 0x87, 0xcc, 0x3c, 0x65,
	0x48, 0x39, 0xc9, 0x11, 0xd1, 0x89, 0x74, 0x6c, 0x38, 0xdf, 0xc2, 0x6e, 0x55, 0xe2, 0xa2, 0x73,
	0x8d, 0x6f, 0x4c, 0xb4, 0x92, 0xdd, 0xde, 0x23, 0x7a, 0x85, 0x8c, 0x0d, 0xc7, 0x13, 0x3d, 0x54,
	0x51, 0x97, 0xe8, 0x2b, 0xad, 0xd7, 0x22, 0x2b, 0x34, 0xb3, 0xbd, 0x4f, 0x56, 0x49, 0x54, 0x6c,
	0x38, 0x14, 0x06, 0x1a, 0xed, 0x86, 0x2e, 0xf5, 0xee, 0x32, 0x54, 0xad, 0xe4, 0x36, 0x59, 0xa9,
	0x01, 0xb1, 0xe1, 0x4c, 0x61, 0x5b, 0x56, 0x33, 0xe8, 0xb4, 0x62, 0x23, 0x52, 0x53, 0x82, 0xf6,
	0x80, 0xd4, 0x05, 0x50, 0xba, 0x85, 0x2a, 0x91, 0xf3, 0x2d, 0xac, 0x78, 0x86, 0x44, 0x23, 0x85,
	0xec, 0x11, 0xd1, 0x29, 0x80, 0x34, 0x3b, 0x99, 0xbd, 0x79, 0x76, 0x8a, 0x8d, 0x48, 0x4d, 0x08,
	0xd8, 0x03, 0x52, 0x27, 0x7c, 0x6c, 0x38, 0x17, 0xa2, 0xeb, 0x4b, 0x96, 0x44, 0x1f, 0x57, 0x1d,
	0x03, 0x52, 0xe7, 0x61, 0x7b, 0x48, 0x34, 0xdc, 0x8a, 0x0d, 0xe7, 0x5c, 0x1c, 0xc8, 0x9c, 0x84,
	0xd0, 0x47, 0xaa, 0x29, 0xce, 0xa7, 0x42, 0x71, 0x36, 0x22, 0x35, 0xd2, 0x2a, 0x00, 0x16, 0x63,
	0x3d, 0x03, 0x58, 0xda, 0x62, 0x95, 0xca, 0x11, 0x29, 0xc0, 0x0a, 0x13, 0xa4, 0xa1, 0xe4, 0xb9,
	0xc6, 0x43, 0x29, 0x36, 0x22, 0xb5, 0x11, 0x69, 0x0f, 0x48, 0x7d, 0x14, 0x62, 0xe3, 0xbb, 0x8e,
	0xf8, 0xe7, 0xe8, 0xfd, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd5, 0xca, 0x4d, 0xad, 0x4e, 0x12,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StuInfoInitClient is the client API for StuInfoInit service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StuInfoInitClient interface {
	StuInfoInit(ctx context.Context, in *StuInfoInitInput, opts ...grpc.CallOption) (*StuGradeRecodeOutput, error)
}

type stuInfoInitClient struct {
	cc *grpc.ClientConn
}

func NewStuInfoInitClient(cc *grpc.ClientConn) StuInfoInitClient {
	return &stuInfoInitClient{cc}
}

func (c *stuInfoInitClient) StuInfoInit(ctx context.Context, in *StuInfoInitInput, opts ...grpc.CallOption) (*StuGradeRecodeOutput, error) {
	out := new(StuGradeRecodeOutput)
	err := c.cc.Invoke(ctx, "/StuInfoInit/StuInfoInit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StuInfoInitServer is the server API for StuInfoInit service.
type StuInfoInitServer interface {
	StuInfoInit(context.Context, *StuInfoInitInput) (*StuGradeRecodeOutput, error)
}

// UnimplementedStuInfoInitServer can be embedded to have forward compatible implementations.
type UnimplementedStuInfoInitServer struct {
}

func (*UnimplementedStuInfoInitServer) StuInfoInit(ctx context.Context, req *StuInfoInitInput) (*StuGradeRecodeOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StuInfoInit not implemented")
}

func RegisterStuInfoInitServer(s *grpc.Server, srv StuInfoInitServer) {
	s.RegisterService(&_StuInfoInit_serviceDesc, srv)
}

func _StuInfoInit_StuInfoInit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StuInfoInitInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StuInfoInitServer).StuInfoInit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StuInfoInit/StuInfoInit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StuInfoInitServer).StuInfoInit(ctx, req.(*StuInfoInitInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _StuInfoInit_serviceDesc = grpc.ServiceDesc{
	ServiceName: "StuInfoInit",
	HandlerType: (*StuInfoInitServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StuInfoInit",
			Handler:    _StuInfoInit_StuInfoInit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction.proto",
}

// StuInfoUpdateClient is the client API for StuInfoUpdate service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StuInfoUpdateClient interface {
	StuInfoUpdate(ctx context.Context, in *StudentInfoUpdateInput, opts ...grpc.CallOption) (*StuInfoUpdateOutput, error)
}

type stuInfoUpdateClient struct {
	cc *grpc.ClientConn
}

func NewStuInfoUpdateClient(cc *grpc.ClientConn) StuInfoUpdateClient {
	return &stuInfoUpdateClient{cc}
}

func (c *stuInfoUpdateClient) StuInfoUpdate(ctx context.Context, in *StudentInfoUpdateInput, opts ...grpc.CallOption) (*StuInfoUpdateOutput, error) {
	out := new(StuInfoUpdateOutput)
	err := c.cc.Invoke(ctx, "/StuInfoUpdate/StuInfoUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StuInfoUpdateServer is the server API for StuInfoUpdate service.
type StuInfoUpdateServer interface {
	StuInfoUpdate(context.Context, *StudentInfoUpdateInput) (*StuInfoUpdateOutput, error)
}

// UnimplementedStuInfoUpdateServer can be embedded to have forward compatible implementations.
type UnimplementedStuInfoUpdateServer struct {
}

func (*UnimplementedStuInfoUpdateServer) StuInfoUpdate(ctx context.Context, req *StudentInfoUpdateInput) (*StuInfoUpdateOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StuInfoUpdate not implemented")
}

func RegisterStuInfoUpdateServer(s *grpc.Server, srv StuInfoUpdateServer) {
	s.RegisterService(&_StuInfoUpdate_serviceDesc, srv)
}

func _StuInfoUpdate_StuInfoUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StudentInfoUpdateInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StuInfoUpdateServer).StuInfoUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StuInfoUpdate/StuInfoUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StuInfoUpdateServer).StuInfoUpdate(ctx, req.(*StudentInfoUpdateInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _StuInfoUpdate_serviceDesc = grpc.ServiceDesc{
	ServiceName: "StuInfoUpdate",
	HandlerType: (*StuInfoUpdateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StuInfoUpdate",
			Handler:    _StuInfoUpdate_StuInfoUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction.proto",
}

// StuGradeRecodeClient is the client API for StuGradeRecode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StuGradeRecodeClient interface {
	StuGradeRecode(ctx context.Context, in *StuGradeRecodeInput, opts ...grpc.CallOption) (*StuGradeRecodeOutput, error)
}

type stuGradeRecodeClient struct {
	cc *grpc.ClientConn
}

func NewStuGradeRecodeClient(cc *grpc.ClientConn) StuGradeRecodeClient {
	return &stuGradeRecodeClient{cc}
}

func (c *stuGradeRecodeClient) StuGradeRecode(ctx context.Context, in *StuGradeRecodeInput, opts ...grpc.CallOption) (*StuGradeRecodeOutput, error) {
	out := new(StuGradeRecodeOutput)
	err := c.cc.Invoke(ctx, "/StuGradeRecode/StuGradeRecode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StuGradeRecodeServer is the server API for StuGradeRecode service.
type StuGradeRecodeServer interface {
	StuGradeRecode(context.Context, *StuGradeRecodeInput) (*StuGradeRecodeOutput, error)
}

// UnimplementedStuGradeRecodeServer can be embedded to have forward compatible implementations.
type UnimplementedStuGradeRecodeServer struct {
}

func (*UnimplementedStuGradeRecodeServer) StuGradeRecode(ctx context.Context, req *StuGradeRecodeInput) (*StuGradeRecodeOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StuGradeRecode not implemented")
}

func RegisterStuGradeRecodeServer(s *grpc.Server, srv StuGradeRecodeServer) {
	s.RegisterService(&_StuGradeRecode_serviceDesc, srv)
}

func _StuGradeRecode_StuGradeRecode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StuGradeRecodeInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StuGradeRecodeServer).StuGradeRecode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StuGradeRecode/StuGradeRecode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StuGradeRecodeServer).StuGradeRecode(ctx, req.(*StuGradeRecodeInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _StuGradeRecode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "StuGradeRecode",
	HandlerType: (*StuGradeRecodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StuGradeRecode",
			Handler:    _StuGradeRecode_StuGradeRecode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction.proto",
}

// StuGradeUpdateClient is the client API for StuGradeUpdate service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StuGradeUpdateClient interface {
	StuGradeUpdate(ctx context.Context, in *StuGradeUpdateInput, opts ...grpc.CallOption) (*StuGradeUpdateOutput, error)
}

type stuGradeUpdateClient struct {
	cc *grpc.ClientConn
}

func NewStuGradeUpdateClient(cc *grpc.ClientConn) StuGradeUpdateClient {
	return &stuGradeUpdateClient{cc}
}

func (c *stuGradeUpdateClient) StuGradeUpdate(ctx context.Context, in *StuGradeUpdateInput, opts ...grpc.CallOption) (*StuGradeUpdateOutput, error) {
	out := new(StuGradeUpdateOutput)
	err := c.cc.Invoke(ctx, "/StuGradeUpdate/StuGradeUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StuGradeUpdateServer is the server API for StuGradeUpdate service.
type StuGradeUpdateServer interface {
	StuGradeUpdate(context.Context, *StuGradeUpdateInput) (*StuGradeUpdateOutput, error)
}

// UnimplementedStuGradeUpdateServer can be embedded to have forward compatible implementations.
type UnimplementedStuGradeUpdateServer struct {
}

func (*UnimplementedStuGradeUpdateServer) StuGradeUpdate(ctx context.Context, req *StuGradeUpdateInput) (*StuGradeUpdateOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StuGradeUpdate not implemented")
}

func RegisterStuGradeUpdateServer(s *grpc.Server, srv StuGradeUpdateServer) {
	s.RegisterService(&_StuGradeUpdate_serviceDesc, srv)
}

func _StuGradeUpdate_StuGradeUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StuGradeUpdateInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StuGradeUpdateServer).StuGradeUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StuGradeUpdate/StuGradeUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StuGradeUpdateServer).StuGradeUpdate(ctx, req.(*StuGradeUpdateInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _StuGradeUpdate_serviceDesc = grpc.ServiceDesc{
	ServiceName: "StuGradeUpdate",
	HandlerType: (*StuGradeUpdateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StuGradeUpdate",
			Handler:    _StuGradeUpdate_StuGradeUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction.proto",
}

// ActivityRegisterClient is the client API for ActivityRegister service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ActivityRegisterClient interface {
	ActivityRegister(ctx context.Context, in *ActivityRegisterInput, opts ...grpc.CallOption) (*ActivityRegisterOutput, error)
}

type activityRegisterClient struct {
	cc *grpc.ClientConn
}

func NewActivityRegisterClient(cc *grpc.ClientConn) ActivityRegisterClient {
	return &activityRegisterClient{cc}
}

func (c *activityRegisterClient) ActivityRegister(ctx context.Context, in *ActivityRegisterInput, opts ...grpc.CallOption) (*ActivityRegisterOutput, error) {
	out := new(ActivityRegisterOutput)
	err := c.cc.Invoke(ctx, "/ActivityRegister/ActivityRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ActivityRegisterServer is the server API for ActivityRegister service.
type ActivityRegisterServer interface {
	ActivityRegister(context.Context, *ActivityRegisterInput) (*ActivityRegisterOutput, error)
}

// UnimplementedActivityRegisterServer can be embedded to have forward compatible implementations.
type UnimplementedActivityRegisterServer struct {
}

func (*UnimplementedActivityRegisterServer) ActivityRegister(ctx context.Context, req *ActivityRegisterInput) (*ActivityRegisterOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivityRegister not implemented")
}

func RegisterActivityRegisterServer(s *grpc.Server, srv ActivityRegisterServer) {
	s.RegisterService(&_ActivityRegister_serviceDesc, srv)
}

func _ActivityRegister_ActivityRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivityRegisterInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityRegisterServer).ActivityRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ActivityRegister/ActivityRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityRegisterServer).ActivityRegister(ctx, req.(*ActivityRegisterInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _ActivityRegister_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ActivityRegister",
	HandlerType: (*ActivityRegisterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ActivityRegister",
			Handler:    _ActivityRegister_ActivityRegister_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction.proto",
}

// ActivityInfoUpdateClient is the client API for ActivityInfoUpdate service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ActivityInfoUpdateClient interface {
	ActivityInfoUpdate(ctx context.Context, in *ActivityInfoUpdateInput, opts ...grpc.CallOption) (*ActivityInfoUpdateOutput, error)
}

type activityInfoUpdateClient struct {
	cc *grpc.ClientConn
}

func NewActivityInfoUpdateClient(cc *grpc.ClientConn) ActivityInfoUpdateClient {
	return &activityInfoUpdateClient{cc}
}

func (c *activityInfoUpdateClient) ActivityInfoUpdate(ctx context.Context, in *ActivityInfoUpdateInput, opts ...grpc.CallOption) (*ActivityInfoUpdateOutput, error) {
	out := new(ActivityInfoUpdateOutput)
	err := c.cc.Invoke(ctx, "/ActivityInfoUpdate/ActivityInfoUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ActivityInfoUpdateServer is the server API for ActivityInfoUpdate service.
type ActivityInfoUpdateServer interface {
	ActivityInfoUpdate(context.Context, *ActivityInfoUpdateInput) (*ActivityInfoUpdateOutput, error)
}

// UnimplementedActivityInfoUpdateServer can be embedded to have forward compatible implementations.
type UnimplementedActivityInfoUpdateServer struct {
}

func (*UnimplementedActivityInfoUpdateServer) ActivityInfoUpdate(ctx context.Context, req *ActivityInfoUpdateInput) (*ActivityInfoUpdateOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivityInfoUpdate not implemented")
}

func RegisterActivityInfoUpdateServer(s *grpc.Server, srv ActivityInfoUpdateServer) {
	s.RegisterService(&_ActivityInfoUpdate_serviceDesc, srv)
}

func _ActivityInfoUpdate_ActivityInfoUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivityInfoUpdateInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityInfoUpdateServer).ActivityInfoUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ActivityInfoUpdate/ActivityInfoUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityInfoUpdateServer).ActivityInfoUpdate(ctx, req.(*ActivityInfoUpdateInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _ActivityInfoUpdate_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ActivityInfoUpdate",
	HandlerType: (*ActivityInfoUpdateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ActivityInfoUpdate",
			Handler:    _ActivityInfoUpdate_ActivityInfoUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction.proto",
}

// ActivityGradeRecodeClient is the client API for ActivityGradeRecode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ActivityGradeRecodeClient interface {
	ActivityGradeRecode(ctx context.Context, in *ActivityGradeRecodeInput, opts ...grpc.CallOption) (*ActivityGradeRecodeOutput, error)
}

type activityGradeRecodeClient struct {
	cc *grpc.ClientConn
}

func NewActivityGradeRecodeClient(cc *grpc.ClientConn) ActivityGradeRecodeClient {
	return &activityGradeRecodeClient{cc}
}

func (c *activityGradeRecodeClient) ActivityGradeRecode(ctx context.Context, in *ActivityGradeRecodeInput, opts ...grpc.CallOption) (*ActivityGradeRecodeOutput, error) {
	out := new(ActivityGradeRecodeOutput)
	err := c.cc.Invoke(ctx, "/ActivityGradeRecode/ActivityGradeRecode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ActivityGradeRecodeServer is the server API for ActivityGradeRecode service.
type ActivityGradeRecodeServer interface {
	ActivityGradeRecode(context.Context, *ActivityGradeRecodeInput) (*ActivityGradeRecodeOutput, error)
}

// UnimplementedActivityGradeRecodeServer can be embedded to have forward compatible implementations.
type UnimplementedActivityGradeRecodeServer struct {
}

func (*UnimplementedActivityGradeRecodeServer) ActivityGradeRecode(ctx context.Context, req *ActivityGradeRecodeInput) (*ActivityGradeRecodeOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivityGradeRecode not implemented")
}

func RegisterActivityGradeRecodeServer(s *grpc.Server, srv ActivityGradeRecodeServer) {
	s.RegisterService(&_ActivityGradeRecode_serviceDesc, srv)
}

func _ActivityGradeRecode_ActivityGradeRecode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivityGradeRecodeInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityGradeRecodeServer).ActivityGradeRecode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ActivityGradeRecode/ActivityGradeRecode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityGradeRecodeServer).ActivityGradeRecode(ctx, req.(*ActivityGradeRecodeInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _ActivityGradeRecode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ActivityGradeRecode",
	HandlerType: (*ActivityGradeRecodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ActivityGradeRecode",
			Handler:    _ActivityGradeRecode_ActivityGradeRecode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction.proto",
}

// CertInfoInitClient is the client API for CertInfoInit service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CertInfoInitClient interface {
	CertInfoInit(ctx context.Context, in *CertInfoInitInput, opts ...grpc.CallOption) (*CertInfoInitOutput, error)
}

type certInfoInitClient struct {
	cc *grpc.ClientConn
}

func NewCertInfoInitClient(cc *grpc.ClientConn) CertInfoInitClient {
	return &certInfoInitClient{cc}
}

func (c *certInfoInitClient) CertInfoInit(ctx context.Context, in *CertInfoInitInput, opts ...grpc.CallOption) (*CertInfoInitOutput, error) {
	out := new(CertInfoInitOutput)
	err := c.cc.Invoke(ctx, "/CertInfoInit/CertInfoInit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CertInfoInitServer is the server API for CertInfoInit service.
type CertInfoInitServer interface {
	CertInfoInit(context.Context, *CertInfoInitInput) (*CertInfoInitOutput, error)
}

// UnimplementedCertInfoInitServer can be embedded to have forward compatible implementations.
type UnimplementedCertInfoInitServer struct {
}

func (*UnimplementedCertInfoInitServer) CertInfoInit(ctx context.Context, req *CertInfoInitInput) (*CertInfoInitOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CertInfoInit not implemented")
}

func RegisterCertInfoInitServer(s *grpc.Server, srv CertInfoInitServer) {
	s.RegisterService(&_CertInfoInit_serviceDesc, srv)
}

func _CertInfoInit_CertInfoInit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CertInfoInitInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertInfoInitServer).CertInfoInit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CertInfoInit/CertInfoInit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertInfoInitServer).CertInfoInit(ctx, req.(*CertInfoInitInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _CertInfoInit_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CertInfoInit",
	HandlerType: (*CertInfoInitServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CertInfoInit",
			Handler:    _CertInfoInit_CertInfoInit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction.proto",
}

// CertInfoUpdateClient is the client API for CertInfoUpdate service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CertInfoUpdateClient interface {
	CertInfoUpdate(ctx context.Context, in *CertInfoUpdateInput, opts ...grpc.CallOption) (*CertInfoUpdateOutput, error)
}

type certInfoUpdateClient struct {
	cc *grpc.ClientConn
}

func NewCertInfoUpdateClient(cc *grpc.ClientConn) CertInfoUpdateClient {
	return &certInfoUpdateClient{cc}
}

func (c *certInfoUpdateClient) CertInfoUpdate(ctx context.Context, in *CertInfoUpdateInput, opts ...grpc.CallOption) (*CertInfoUpdateOutput, error) {
	out := new(CertInfoUpdateOutput)
	err := c.cc.Invoke(ctx, "/CertInfoUpdate/CertInfoUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CertInfoUpdateServer is the server API for CertInfoUpdate service.
type CertInfoUpdateServer interface {
	CertInfoUpdate(context.Context, *CertInfoUpdateInput) (*CertInfoUpdateOutput, error)
}

// UnimplementedCertInfoUpdateServer can be embedded to have forward compatible implementations.
type UnimplementedCertInfoUpdateServer struct {
}

func (*UnimplementedCertInfoUpdateServer) CertInfoUpdate(ctx context.Context, req *CertInfoUpdateInput) (*CertInfoUpdateOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CertInfoUpdate not implemented")
}

func RegisterCertInfoUpdateServer(s *grpc.Server, srv CertInfoUpdateServer) {
	s.RegisterService(&_CertInfoUpdate_serviceDesc, srv)
}

func _CertInfoUpdate_CertInfoUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CertInfoUpdateInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertInfoUpdateServer).CertInfoUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CertInfoUpdate/CertInfoUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertInfoUpdateServer).CertInfoUpdate(ctx, req.(*CertInfoUpdateInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _CertInfoUpdate_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CertInfoUpdate",
	HandlerType: (*CertInfoUpdateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CertInfoUpdate",
			Handler:    _CertInfoUpdate_CertInfoUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction.proto",
}

// StuInfoQueryClient is the client API for StuInfoQuery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StuInfoQueryClient interface {
	StuInfoQuery(ctx context.Context, in *StuInfoQueryInput, opts ...grpc.CallOption) (*StuInfoQueryOutput, error)
}

type stuInfoQueryClient struct {
	cc *grpc.ClientConn
}

func NewStuInfoQueryClient(cc *grpc.ClientConn) StuInfoQueryClient {
	return &stuInfoQueryClient{cc}
}

func (c *stuInfoQueryClient) StuInfoQuery(ctx context.Context, in *StuInfoQueryInput, opts ...grpc.CallOption) (*StuInfoQueryOutput, error) {
	out := new(StuInfoQueryOutput)
	err := c.cc.Invoke(ctx, "/StuInfoQuery/StuInfoQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StuInfoQueryServer is the server API for StuInfoQuery service.
type StuInfoQueryServer interface {
	StuInfoQuery(context.Context, *StuInfoQueryInput) (*StuInfoQueryOutput, error)
}

// UnimplementedStuInfoQueryServer can be embedded to have forward compatible implementations.
type UnimplementedStuInfoQueryServer struct {
}

func (*UnimplementedStuInfoQueryServer) StuInfoQuery(ctx context.Context, req *StuInfoQueryInput) (*StuInfoQueryOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StuInfoQuery not implemented")
}

func RegisterStuInfoQueryServer(s *grpc.Server, srv StuInfoQueryServer) {
	s.RegisterService(&_StuInfoQuery_serviceDesc, srv)
}

func _StuInfoQuery_StuInfoQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StuInfoQueryInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StuInfoQueryServer).StuInfoQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StuInfoQuery/StuInfoQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StuInfoQueryServer).StuInfoQuery(ctx, req.(*StuInfoQueryInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _StuInfoQuery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "StuInfoQuery",
	HandlerType: (*StuInfoQueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StuInfoQuery",
			Handler:    _StuInfoQuery_StuInfoQuery_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction.proto",
}

// StuGradeQueryClient is the client API for StuGradeQuery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StuGradeQueryClient interface {
	StuGradeQuery(ctx context.Context, in *StuGradeQueryInput, opts ...grpc.CallOption) (*StuGradeQueryOutput, error)
}

type stuGradeQueryClient struct {
	cc *grpc.ClientConn
}

func NewStuGradeQueryClient(cc *grpc.ClientConn) StuGradeQueryClient {
	return &stuGradeQueryClient{cc}
}

func (c *stuGradeQueryClient) StuGradeQuery(ctx context.Context, in *StuGradeQueryInput, opts ...grpc.CallOption) (*StuGradeQueryOutput, error) {
	out := new(StuGradeQueryOutput)
	err := c.cc.Invoke(ctx, "/StuGradeQuery/StuGradeQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StuGradeQueryServer is the server API for StuGradeQuery service.
type StuGradeQueryServer interface {
	StuGradeQuery(context.Context, *StuGradeQueryInput) (*StuGradeQueryOutput, error)
}

// UnimplementedStuGradeQueryServer can be embedded to have forward compatible implementations.
type UnimplementedStuGradeQueryServer struct {
}

func (*UnimplementedStuGradeQueryServer) StuGradeQuery(ctx context.Context, req *StuGradeQueryInput) (*StuGradeQueryOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StuGradeQuery not implemented")
}

func RegisterStuGradeQueryServer(s *grpc.Server, srv StuGradeQueryServer) {
	s.RegisterService(&_StuGradeQuery_serviceDesc, srv)
}

func _StuGradeQuery_StuGradeQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StuGradeQueryInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StuGradeQueryServer).StuGradeQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StuGradeQuery/StuGradeQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StuGradeQueryServer).StuGradeQuery(ctx, req.(*StuGradeQueryInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _StuGradeQuery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "StuGradeQuery",
	HandlerType: (*StuGradeQueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StuGradeQuery",
			Handler:    _StuGradeQuery_StuGradeQuery_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction.proto",
}

// StuActQueryClient is the client API for StuActQuery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StuActQueryClient interface {
	StuActQuery(ctx context.Context, in *StuActQueryInput, opts ...grpc.CallOption) (*StuActQueryOutput, error)
}

type stuActQueryClient struct {
	cc *grpc.ClientConn
}

func NewStuActQueryClient(cc *grpc.ClientConn) StuActQueryClient {
	return &stuActQueryClient{cc}
}

func (c *stuActQueryClient) StuActQuery(ctx context.Context, in *StuActQueryInput, opts ...grpc.CallOption) (*StuActQueryOutput, error) {
	out := new(StuActQueryOutput)
	err := c.cc.Invoke(ctx, "/StuActQuery/StuActQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StuActQueryServer is the server API for StuActQuery service.
type StuActQueryServer interface {
	StuActQuery(context.Context, *StuActQueryInput) (*StuActQueryOutput, error)
}

// UnimplementedStuActQueryServer can be embedded to have forward compatible implementations.
type UnimplementedStuActQueryServer struct {
}

func (*UnimplementedStuActQueryServer) StuActQuery(ctx context.Context, req *StuActQueryInput) (*StuActQueryOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StuActQuery not implemented")
}

func RegisterStuActQueryServer(s *grpc.Server, srv StuActQueryServer) {
	s.RegisterService(&_StuActQuery_serviceDesc, srv)
}

func _StuActQuery_StuActQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StuActQueryInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StuActQueryServer).StuActQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StuActQuery/StuActQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StuActQueryServer).StuActQuery(ctx, req.(*StuActQueryInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _StuActQuery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "StuActQuery",
	HandlerType: (*StuActQueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StuActQuery",
			Handler:    _StuActQuery_StuActQuery_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction.proto",
}

// StuCertQueryClient is the client API for StuCertQuery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StuCertQueryClient interface {
	StuCertQuery(ctx context.Context, in *StuCertQueryInput, opts ...grpc.CallOption) (*StuCertQueryOutput, error)
}

type stuCertQueryClient struct {
	cc *grpc.ClientConn
}

func NewStuCertQueryClient(cc *grpc.ClientConn) StuCertQueryClient {
	return &stuCertQueryClient{cc}
}

func (c *stuCertQueryClient) StuCertQuery(ctx context.Context, in *StuCertQueryInput, opts ...grpc.CallOption) (*StuCertQueryOutput, error) {
	out := new(StuCertQueryOutput)
	err := c.cc.Invoke(ctx, "/StuCertQuery/StuCertQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StuCertQueryServer is the server API for StuCertQuery service.
type StuCertQueryServer interface {
	StuCertQuery(context.Context, *StuCertQueryInput) (*StuCertQueryOutput, error)
}

// UnimplementedStuCertQueryServer can be embedded to have forward compatible implementations.
type UnimplementedStuCertQueryServer struct {
}

func (*UnimplementedStuCertQueryServer) StuCertQuery(ctx context.Context, req *StuCertQueryInput) (*StuCertQueryOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StuCertQuery not implemented")
}

func RegisterStuCertQueryServer(s *grpc.Server, srv StuCertQueryServer) {
	s.RegisterService(&_StuCertQuery_serviceDesc, srv)
}

func _StuCertQuery_StuCertQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StuCertQueryInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StuCertQueryServer).StuCertQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StuCertQuery/StuCertQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StuCertQueryServer).StuCertQuery(ctx, req.(*StuCertQueryInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _StuCertQuery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "StuCertQuery",
	HandlerType: (*StuCertQueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StuCertQuery",
			Handler:    _StuCertQuery_StuCertQuery_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction.proto",
}

// ActInfoQueryClient is the client API for ActInfoQuery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ActInfoQueryClient interface {
	ActInfoQuery(ctx context.Context, in *ActInfoQueryInput, opts ...grpc.CallOption) (*ActInfoQueryOutput, error)
}

type actInfoQueryClient struct {
	cc *grpc.ClientConn
}

func NewActInfoQueryClient(cc *grpc.ClientConn) ActInfoQueryClient {
	return &actInfoQueryClient{cc}
}

func (c *actInfoQueryClient) ActInfoQuery(ctx context.Context, in *ActInfoQueryInput, opts ...grpc.CallOption) (*ActInfoQueryOutput, error) {
	out := new(ActInfoQueryOutput)
	err := c.cc.Invoke(ctx, "/ActInfoQuery/ActInfoQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ActInfoQueryServer is the server API for ActInfoQuery service.
type ActInfoQueryServer interface {
	ActInfoQuery(context.Context, *ActInfoQueryInput) (*ActInfoQueryOutput, error)
}

// UnimplementedActInfoQueryServer can be embedded to have forward compatible implementations.
type UnimplementedActInfoQueryServer struct {
}

func (*UnimplementedActInfoQueryServer) ActInfoQuery(ctx context.Context, req *ActInfoQueryInput) (*ActInfoQueryOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActInfoQuery not implemented")
}

func RegisterActInfoQueryServer(s *grpc.Server, srv ActInfoQueryServer) {
	s.RegisterService(&_ActInfoQuery_serviceDesc, srv)
}

func _ActInfoQuery_ActInfoQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActInfoQueryInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActInfoQueryServer).ActInfoQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ActInfoQuery/ActInfoQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActInfoQueryServer).ActInfoQuery(ctx, req.(*ActInfoQueryInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _ActInfoQuery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ActInfoQuery",
	HandlerType: (*ActInfoQueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ActInfoQuery",
			Handler:    _ActInfoQuery_ActInfoQuery_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction.proto",
}
